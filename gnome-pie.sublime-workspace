{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"acti",
				"activate"
			],
			[
				"Pi",
				"PieAction"
			],
			[
				"get",
				"getAction"
			],
			[
				"actio",
				"action"
			],
			[
				"ac",
				"Action"
			],
			[
				"act",
				"active_pie_id"
			],
			[
				"op",
				"open_pie"
			],
			[
				"bu",
				"builder"
			],
			[
				"Op",
				"OpenPie"
			],
			[
				"ope",
				"openpie_"
			],
			[
				"bg_",
				"bg_highlight"
			],
			[
				"loa",
				"load_texture"
			],
			[
				"pa",
				"parent_menu_"
			],
			[
				"bg",
				"bg_highlight"
			],
			[
				"te",
				"texture"
			],
			[
				"Ti",
				"Tilemenu"
			],
			[
				"SE",
				"SELECTED"
			],
			[
				"S",
				"State"
			],
			[
				"FI",
				"FINAL_SELECTED"
			],
			[
				"from",
				"from_hls"
			],
			[
				"sele",
				"selected_color_"
			],
			[
				"set_",
				"set_background_position"
			],
			[
				"set_b",
				"set_background_position"
			],
			[
				"SEL",
				"SELECTABLE"
			],
			[
				"can",
				"cancel"
			],
			[
				"pare",
				"parent_item"
			],
			[
				"but",
				"button"
			],
			[
				"rem",
				"remove_child"
			],
			[
				"an",
				"animation_ease_"
			],
			[
				"pre",
				"PREVIEW"
			],
			[
				"sub",
				"sub_menus"
			],
			[
				"co",
				"color_"
			],
			[
				"Co",
				"Color"
			],
			[
				"get_",
				"get_horizontal_children_count"
			],
			[
				"TIL",
				"TILE_WIDTH"
			],
			[
				"TI",
				"TILE_HEIGHT"
			],
			[
				"chi",
				"children_count"
			],
			[
				"sta",
				"start_angle"
			],
			[
				"par",
				"parent_menu_"
			],
			[
				"for",
				"foreach"
			],
			[
				"bac",
				"background_"
			],
			[
				"butt",
				"on_button_press"
			],
			[
				"cal",
				"calculate_positions"
			],
			[
				"I",
				"INACTIVE"
			],
			[
				"clo",
				"closed_"
			],
			[
				"hi",
				"hide_mouse"
			],
			[
				"set",
				"settings"
			],
			[
				"To",
				"TouchMenu"
			],
			[
				"rel",
				"relative_position_"
			],
			[
				"mo",
				"mouse_path_"
			],
			[
				"draw",
				"draw_line_to_item"
			],
			[
				"dr",
				"draw_line_to_item"
			],
			[
				"le",
				"length-1"
			],
			[
				"fi",
				"first_or_last_child"
			],
			[
				"BI",
				"BIG_ATTACHED"
			],
			[
				"ge",
				"get_stage"
			],
			[
				"SM",
				"SMALL_ACTIVE"
			],
			[
				"rec",
				"recurvsive_cancel"
			],
			[
				"las",
				"last_position"
			],
			[
				"parent",
				"parent"
			],
			[
				"ch",
				"child_index_clamped"
			],
			[
				"fir",
				"first_is_empty"
			],
			[
				"Tou",
				"TouchMenuItem"
			],
			[
				"pos",
				"position"
			],
			[
				"rel_",
				"rel_dir"
			],
			[
				"sel",
				"selected_"
			],
			[
				"ci",
				"child"
			],
			[
				"AT",
				"BIG_ATTACHED"
			],
			[
				"on_",
				"on_key_up"
			],
			[
				"on_c",
				"on_cancel"
			],
			[
				"paren",
				"parent_menu_"
			],
			[
				"scale",
				"scale_x"
			],
			[
				"dis",
				"distance"
			],
			[
				"re",
				"reset"
			],
			[
				"on",
				"on_decision_point"
			],
			[
				"tou",
				"touch_trace_"
			],
			[
				"to",
				"touch_trace"
			],
			[
				"gra",
				"grab_global_mouse_events"
			],
			[
				"BIG_A",
				"BIG_ATTACHED"
			],
			[
				"o",
				"ortho_dir"
			],
			[
				"License",
				"licenses"
			],
			[
				"ani",
				"animation_ease_"
			],
			[
				"anim",
				"animation_linear_"
			],
			[
				"se",
				"set_scale"
			],
			[
				"Hov",
				"HOVERED"
			],
			[
				"hov",
				"hover_effect_"
			],
			[
				"ho",
				"hover_effect_"
			],
			[
				"A",
				"AnimationMode"
			],
			[
				"Ani",
				"Animatable"
			],
			[
				"An",
				"Animatable"
			],
			[
				"de",
				"delay"
			],
			[
				"Animat",
				"AnimationMode"
			],
			[
				"wi",
				"width"
			],
			[
				"ba",
				"background_"
			],
			[
				"fore",
				"foreground_"
			],
			[
				"fe",
				"foreground"
			],
			[
				"rela",
				"relative_position"
			],
			[
				"in",
				"init"
			],
			[
				"add",
				"add_child"
			],
			[
				"fg",
				"fg_inactive"
			],
			[
				"fo",
				"foreground_"
			],
			[
				"back",
				"background_"
			],
			[
				"dir",
				"directory"
			],
			[
				"pl",
				"plugin_path_"
			],
			[
				"plu",
				"plugin_path_"
			],
			[
				"Tex",
				"Texture"
			],
			[
				"H",
				"HOVERABLE"
			],
			[
				"st",
				"state_"
			],
			[
				"HOV",
				"HOVERED"
			],
			[
				"mou",
				"mouse_angle"
			],
			[
				"V",
				"VISIBLE"
			],
			[
				"Lin",
				"LinearMenuItem"
			],
			[
				"su",
				"sub_menus"
			],
			[
				"is",
				"isRoot"
			],
			[
				"Touc",
				"TouchMenuItem"
			],
			[
				"men",
				"menu_plugin"
			],
			[
				"it",
				"item_count"
			],
			[
				"marke",
				"markerInterval"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/menus/PieManager.vala",
			"settings":
			{
				"buffer_size": 9456,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/menus/Pie.vala",
			"settings":
			{
				"buffer_size": 6298,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/actions/PieAction.vala",
			"settings":
			{
				"buffer_size": 4155,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/dbus/OpenPie.vala",
			"settings":
			{
				"buffer_size": 3391,
				"line_ending": "Unix"
			}
		},
		{
			"file": "make.sh",
			"settings":
			{
				"buffer_size": 99,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/actions/ActionRegistry.vala",
			"settings":
			{
				"buffer_size": 8122,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "////////////////////////////////////////////////////////////////////////////////\n// Copyright (c) 2011-2013 by Simon Schneegans                                //\n//                                                                            //\n// This program is free software: you can redistribute it and/or modify it    //\n// under the terms of the GNU General Public License as published by the Free //\n// Software Foundation, either version 3 of the License, or (at your option)  //\n// any later version.                                                         //\n//                                                                            //\n// This program is distributed in the hope that it will be useful, but        //\n// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY //\n// or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License   //\n// for more details.                                                          //\n//                                                                            //\n// You should have received a copy of the GNU General Public License along    //\n// with this program.  If not, see <http://www.gnu.org/licenses/>.            //\n////////////////////////////////////////////////////////////////////////////////\n\nnamespace OpenPie {\n\n////////////////////////////////////////////////////////////////////////////////\n// A class which loads image files. It can load image files in various        //\n// formats, including jpeg, png and svg.                                      //\n////////////////////////////////////////////////////////////////////////////////\n\npublic class Image : GLib.Object {\n\n  //////////////////////////////////////////////////////////////////////////////\n  //                          public interface                                //\n  //////////////////////////////////////////////////////////////////////////////\n\n  // The internally used surface. ----------------------------------------------\n  public Cairo.ImageSurface surface { public get; protected set; default=null; }\n\n  //////////////////////////// public methods //////////////////////////////////\n\n  // Creates an empty Image. ---------------------------------------------------\n  public Image.empty(int width, int height, Color? color = null) {\n    this.surface = new Cairo.ImageSurface(Cairo.Format.ARGB32, width, height);\n\n    if (color != null) {\n      var ctx = this.context();\n      ctx.set_source_rgb(color.r, color.g, color.b);\n      ctx.paint();\n    }\n  }\n\n  // Creates an image from the the given filename. -----------------------------\n  public Image.from_file(string filename) {\n    this.load_file(filename);\n  }\n\n  // Creates an image from the the given filename at a given size. -------------\n  public Image.from_file_at_size(string filename, int width, int height) {\n    this.load_file_at_size(filename, width, height);\n  }\n\n  // Creates an image from the the given Gdk.Pixbuf. ---------------------------\n  public Image.from_pixbuf(Gdk.Pixbuf pixbuf) {\n    if (pixbuf != null)\n      this.load_pixbuf(pixbuf);\n    else\n      this.surface = new Cairo.ImageSurface(Cairo.Format.ARGB32, 1, 1);\n  }\n\n  // Captures a part of the screen. --------------------------------------------\n  public Image.capture_screen(int posx, int posy, int width,\n                              int height, bool hide_pies = true) {\n\n    Gdk.Window root = Gdk.get_default_root_window();\n\n    Gdk.Pixbuf pixbuf = Gdk.pixbuf_get_from_window(root, posx, posy,\n                                                   width, height);\n    this.load_pixbuf(pixbuf);\n  }\n\n  // Loads an image from the the given filename. -------------------------------\n  public void load_file(string filename) {\n    try {\n      var pixbuf = new Gdk.Pixbuf.from_file(filename);\n\n      if (pixbuf != null) {\n        this.load_pixbuf(pixbuf);\n      } else {\n        warning(\"Failed to load \" + filename + \"!\");\n        this.surface = new Cairo.ImageSurface(Cairo.Format.ARGB32, 1, 1);\n      }\n    } catch (GLib.Error e) {\n      message(\"Error loading image file: %s\", e.message);\n      this.surface = new Cairo.ImageSurface(Cairo.Format.ARGB32, 1, 1);\n    }\n  }\n\n  // Loads an image from the the given filename at a given size. ---------------\n  public void load_file_at_size(string filename, int width, int height) {\n    try {\n      var pixbuf = new Gdk.Pixbuf.from_file_at_size(filename, width, height);\n\n      if (pixbuf != null) {\n        this.load_pixbuf(pixbuf);\n      } else {\n        warning(\"Failed to load \" + filename + \"!\");\n        this.surface = new Cairo.ImageSurface(Cairo.Format.ARGB32, width, height);\n      }\n    } catch (GLib.Error e) {\n      message(\"Error loading image file: %s\", e.message);\n      this.surface = new Cairo.ImageSurface(Cairo.Format.ARGB32, width, height);\n    }\n  }\n\n  // Loads an image from the the given Gdk.Pixbuf. -----------------------------\n  public void load_pixbuf(Gdk.Pixbuf pixbuf) {\n    this.surface = new Cairo.ImageSurface(Cairo.Format.ARGB32, pixbuf.width, pixbuf.height);\n\n    var ctx = this.context();\n    Gdk.cairo_set_source_pixbuf(ctx, pixbuf, 1.0, 1.0);\n    ctx.paint();\n  }\n\n  // Paints the image onto the given Cairo.Context -----------------------------\n  public void paint_on(Cairo.Context ctx, double alpha = 1.0) {\n    ctx.set_source_surface(this.surface, (int)(-0.5*this.width()-1), (int)(-0.5*this.height()-1));\n    if (alpha >= 1.0) ctx.paint();\n    else        ctx.paint_with_alpha(alpha);\n  }\n\n  // Converts the image to a Gdk.Pixbuf. ---------------------------------------\n  public Gdk.Pixbuf to_pixbuf() {\n    if (this.surface == null || this.surface.get_data().length <= 0)\n      return new Gdk.Pixbuf(Gdk.Colorspace.RGB, true, 8, 1, 1);\n\n    var pixbuf = new Gdk.Pixbuf.from_data(this.surface.get_data(), Gdk.Colorspace.RGB, true, 8,\n                        width(), height(), this.surface.get_stride(), null);\n\n    pixbuf = pixbuf.copy();\n\n    // funny stuff here --- need to swap Red end Blue because Cairo\n    // and Gdk are different...\n    uint8* p = pixbuf.pixels;\n    for (int i=0; i<width()*height()*4-4; i+=4) {\n      var tmp = *(p + i);\n      *(p + i) = *(p + i + 2);\n      *(p + i + 2) = tmp;\n    }\n\n		return pixbuf;\n  }\n\n  // Returns a Cairo.Context for the Image. ------------------------------------\n  public Cairo.Context context() {\n    return new Cairo.Context(this.surface);\n  }\n\n  // Returns the width of the image in pixels. ---------------------------------\n  public int width() {\n    if (this.surface != null)\n      return this.surface.get_width();\n    return 0;\n  }\n\n  // Returns the height of the image in pixels. --------------------------------\n  public int height() {\n    if (this.surface != null)\n      return this.surface.get_height();\n    return 0;\n  }\n}\n\n}\n",
			"file": "src/utilities/Image.vala",
			"file_size": 6790,
			"file_write_time": 130212103610000000,
			"settings":
			{
				"buffer_size": 6790,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/Vala.sublime-build",
	"command_palette":
	{
		"height": 375.0,
		"selected_items":
		[
			[
				"pus",
				"Git: Push Current Branch"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add..."
			],
			[
				"cha",
				"Git: Change Branch"
			],
			[
				"push",
				"Git: Push Current Branch"
			],
			[
				"git ad",
				"Git: Add..."
			],
			[
				"gi a",
				"Git: Add..."
			],
			[
				"pu",
				"Git: Push Current Branch"
			],
			[
				"git",
				"Git: Add..."
			],
			[
				"settin",
				"Preferences: Settings - User"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"comm",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Enable Package"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"gi",
				"Git: Status"
			],
			[
				"select",
				"Bookmarks: Select All"
			],
			[
				"pack",
				"Package Control: List Packages"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"sublmi",
				"Preferences: SublimeLinter Settings – Default"
			]
		],
		"width": 390.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"bash",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/simon/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/utilities/Image.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/daemon/server/OpenPieServer.vala",
		"/var/www/HistoGlobe/data/world_low.json",
		"/var/www/HistoGlobe/data/ne_50m_admin_0_boundary_lines_land.json",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/menus/PieManager.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/action_groups/MenuGroup.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/dbus/Serializer.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/actions/Action.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/action_groups/ActionGroup.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/actions/PieAction.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/Test.vala",
		"/home/simon/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/menus/Pie.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/dbus/OpenPie.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/utilities/Paths.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/menus/Save.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/menus/Load.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/menus/DefaultConfig.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/Deamon.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/actions/AppAction.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/actions/ActionRegistry.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/action_groups/WindowListGroup.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/action_groups/BookmarkGroup.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/action_groups/DevicesGroup.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/action_groups/SessionGroup.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/action_groups/ActionGroupRegistry.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/actions/UriAction.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/images/Image.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/images/Icon.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/utilities/Logger.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/utilities/Trigger.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie-develop/src/utilities/key.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/utilities/BindingManager.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/TraceMenu/TraceMenu.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/lib/utilities/Key.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/lib/utilities/Logger.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/gnome-pie.sublime-project",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/TileMenu/TileMenuItem.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/lib/view/TransparentWindow.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/TileMenu/TileMenu.vala",
		"/home/simon/Arbeitsfläche/dbus.py",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/TouchMenu/TouchMenuItem.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/lib/menu/MenuLoader.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Test.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/lib/menu/MenuItem.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/TraceMenu/TraceMenuItem.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/TraceMenu/Trace.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/renderers/pieRenderer.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/Gnome-Pie/Gnome-Pie/src/deamon.vala",
		"/home/simon/Arbeitsfläche/CircleMenu/CircleMenu.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/TouchMenu/TouchMenu.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/TraceMenu/org.gnome.openpie.tracemenu.gschema.xml",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/CircleMenu/CircleMenu.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/CircleMenu/CircleMenuItem.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/lib/menu/Menu.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/TouchMenu/org.gnome.openpie.touchmenu.gschema.xml",
		"/home/simon/.data/Projekte/Programmierung/Vala/Testing/Gestures/Main.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/daemon/server/Daemon.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/TouchMenu/TouchTrace.vala",
		"/home/simon/Scripts/metacity.sh",
		"/home/simon/Scripts/touch.sh",
		"/tmp/.fr-EFdyFX/etc/udev/rules.d/99-mtir.rules",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/lib/utilities/Vector.vala",
		"/var/www/HistoGlobe/css/style.css",
		"/var/www/HistoGlobe/index.php",
		"/usr/share/gnome-shell/js/ui/workspace.js",
		"/usr/share/gnome-shell/js/ui/overview.js",
		"/usr/share/gnome-shell/js/ui/main.js",
		"/home/simon/.local/share/gnome-shell/extensions/ShowDesktopFromOverview@bazonbloch.arcor.de/extension.js",
		"/home/simon/.local/share/gnome-shell/extensions/blur-overview@nailfarmer.nailfarmer.com/extension.js",
		"/home/simon/.local/share/gnome-shell/extensions/todolist@bsaleil.org/extension.js",
		"/home/simon/.local/share/gnome-shell/extensions/removeaccesibility@lomegor/extension.js",
		"/usr/share/gnome-shell/js/ui/background.js",
		"/home/simon/.local/share/gnome-shell/extensions/blur-overview@nailfarmer.nailfarmer.com/metadata.json",
		"/home/simon/.data/Uni/6. Semester/Bachelor/Exploding-Menus/src/Utilities/Time.vala",
		"/home/simon/.data/Uni/6. Semester/Bachelor/Exploding-Menus/src/Utilities/Mark.vala",
		"/home/simon/.data/Uni/6. Semester/Bachelor/Exploding-Menus/src/Utilities/MousePath.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/lib/utilities/Animatable.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/lib/utilities/Color.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/daemon/plugins/PluginLoader.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/daemon/plugins/PluginModule.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/TouchMenu/CMakeLists.txt",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/LinearMenu/LinearMenu.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/lib/plugins/MenuPlugin.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/TraceMenu/CMakeLists.txt",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/LinearMenu/CMakeLists.txt",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/daemon/plugins/Plugin.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/build/lib/plugins/Plugin.c",
		"/home/simon/.data/Uni/6. Semester/Bachelor/ArbeitSynced/s_Testing.tex",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/LinearMenu/LinearMenuItem.vala",
		"/home/simon/Arbeitsfläche/test.html",
		"/home/simon/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/daemon/server/DBusInterface.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/org.openpie.gschema.xml",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/lib/utilities/Paths.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/lib/plugins/Plugin.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/lib/utilities/Image.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/lib/utilities/FocusGrabber.vala",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/lib/view/Style.vala",
		"/home/simon/.data/Uni/6. Semester/Bachelor/ArbeitSynced/m_Preamble.tex",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/.gitignore",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/daemon/CMakeLists.txt",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/CMakeLists.txt",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/plugins/CMakeLists.txt",
		"/home/simon/.config/sublime-text-3/Packages/User/Vala.build-language",
		"/home/simon/.config/sublime-text-3/Packages/User/Vala.sublime-build",
		"/home/simon/.cache/.fr-bErm4h/JavaScript.tmLanguage",
		"/opt/sublime_text/Packages/C++.sublime-package",
		"/var/www/HistoGlobe/script/display/Display3D.coffee",
		"/home/simon/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/simon/.config/sublime-text-3/Packages/Better CoffeeScript/CoffeeScript.sublime-settings",
		"/home/simon/.config/sublime-text-3/Packages/Terminal/Default (Linux).sublime-keymap",
		"/home/simon/.config/sublime-text-3/Packages/Terminal/Terminal.sublime-settings",
		"/home/simon/.config/sublime-text-3/Packages/User/Terminal.sublime-settings",
		"/home/simon/.data/Projekte/Programmierung/Vala/OpenPie/openpie.sublime-project",
		"/var/www/HistoGlobe/script/display/Display.coffee",
		"/var/www/HistoGlobe/script/display/Display3D.js",
		"/home/simon/.config/sublime-text-3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/home/simon/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/simon/Arbeitsfläche/test.coffee",
		"/home/simon/Display3D.js",
		"/home/simon/histoglobe.min.js",
		"/var/www/HistoGlobe/script/timeline/Timeline.js"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"getAction",
			"item",
			"active_pie_id",
			"active_pie",
			"b.",
			"menu_id",
			"dbus",
			"PieManager",
			"warning",
			"/// ",
			"MenuManager",
			"Pies",
			"/// ",
			"PieManager",
			"GroupRegistry",
			"/// ",
			"    this",
			"/// ",
			"  ",
			"window_",
			"mouse_layer_",
			"cogl_texture",
			"set_high",
			"set_highlighted",
			"cogl_texture",
			"load_texture",
			"null",
			"text_",
			"FINAL",
			"absolute_position",
			"set_color",
			"set_active",
			"50",
			"set_active",
			"set_position",
			"update_actor_positions",
			"set_depth",
			"actor",
			"Actor",
			"actor",
			"Actor",
			"actor",
			"set_depth",
			"ease",
			"get_raa",
			"get_vertical_children_count",
			"set_relative_position",
			"set_background_visible",
			"red",
			"set_size",
			"size",
			"set_size",
			"TILE_HEIGHT",
			"TILE_WIDTH",
			"parent_item",
			"background_",
			" - background_.width/2",
			"small_pre",
			"PREVIEW_DE",
			"small_pre",
			"atta",
			"child_angle",
			"sin",
			"hide",
			"touch",
			"touch_trace_",
			"touch",
			"TouchMenu",
			"TouchMenuItem",
			"TouchMenu",
			"TouchTrace",
			"touch",
			"hover",
			"load_texture",
			"high",
			"foreground_",
			"fore",
			"get_selected_child",
			"sche",
			"scale",
			"length",
			"set_re",
			"foreground_",
			"TouchMenu",
			"TouchMenuItem",
			"CircleMenuItem",
			"CircleMenu",
			"circl",
			"CircleMenuItem",
			"CircleMenu",
			"remove",
			"add_ch",
			"clos",
			"draw_background",
			"on_sel",
			"windo",
			"mouse_layer_",
			"inva",
			"invaö",
			"get_se",
			"remo",
			"selected_",
			"on_decision_point",
			"TouchMenu",
			"touch_trace_",
			"TouchMenuItem",
			"TouchMenu",
			"set_highlighted",
			"opacity",
			"parent_item",
			"activated_",
			"key_dow",
			"content",
			"invalidate",
			"get_a",
			"relative_position_",
			"set_relative_position",
			"relative_position_",
			"get_abs",
			"recurvsive_hide",
			"trace",
			"on_dec",
			"mouse_path_",
			"on_decision_point",
			"trace",
			"on_mouse_move",
			"get_selected_child",
			"request_preview"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"// ",
			" "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/menus/PieManager.vala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9456,
						"regions":
						{
						},
						"selection":
						[
							[
								2667,
								2667
							]
						],
						"settings":
						{
							"syntax": "Packages/Vala/vala/Vala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 340.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/menus/Pie.vala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6298,
						"regions":
						{
						},
						"selection":
						[
							[
								5835,
								5835
							]
						],
						"settings":
						{
							"syntax": "Packages/Vala/vala/Vala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1367.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/actions/PieAction.vala",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 4155,
						"regions":
						{
						},
						"selection":
						[
							[
								2736,
								2736
							]
						],
						"settings":
						{
							"syntax": "Packages/Vala/vala/Vala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "src/dbus/OpenPie.vala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3391,
						"regions":
						{
						},
						"selection":
						[
							[
								1754,
								1754
							]
						],
						"settings":
						{
							"syntax": "Packages/Vala/vala/Vala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "make.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 99,
						"regions":
						{
						},
						"selection":
						[
							[
								99,
								99
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/actions/ActionRegistry.vala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8122,
						"regions":
						{
						},
						"selection":
						[
							[
								5744,
								5744
							]
						],
						"settings":
						{
							"syntax": "Packages/Vala/vala/Vala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1471.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/utilities/Image.vala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6790,
						"regions":
						{
						},
						"selection":
						[
							[
								2249,
								2249
							]
						],
						"settings":
						{
							"syntax": "Packages/Vala/vala/Vala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1521.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 29.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 182.0
	},
	"output.git":
	{
		"height": 90.0
	},
	"project": "gnome-pie.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"item",
				"plugins/TouchMenu/TouchMenuItem.vala"
			],
			[
				"tr",
				"lib/view/TransparentWindow.vala"
			],
			[
				"touc",
				"plugins/TouchMenu/TouchMenuItem.vala"
			],
			[
				"load",
				"lib/menu/MenuLoader.vala"
			],
			[
				"tran",
				"lib/view/TransparentWindow.vala"
			],
			[
				"tou",
				"plugins/TouchMenu/TouchMenu.vala"
			],
			[
				"cir",
				"plugins/CircleMenu/CircleMenuItem.vala"
			],
			[
				"men",
				"lib/menu/Menu.vala"
			],
			[
				"da",
				"daemon/server/Daemon.vala"
			],
			[
				"serv",
				"daemon/server/OpenPieServer.vala"
			],
			[
				"ve",
				"lib/utilities/Vector.vala"
			],
			[
				"key",
				"lib/utilities/Key.vala"
			],
			[
				"wind",
				"lib/view/TransparentWindow.vala"
			],
			[
				"menu",
				"lib/menu/Menu.vala"
			],
			[
				"win",
				"lib/view/TransparentWindow.vala"
			],
			[
				"server",
				"daemon/server/OpenPieServer.vala"
			],
			[
				"an",
				"lib/utilities/Animatable.vala"
			],
			[
				"ani",
				"lib/utilities/Animatable.vala"
			],
			[
				"colo",
				"lib/utilities/Color.vala"
			],
			[
				"vec",
				"lib/utilities/Vector.vala"
			],
			[
				"ana",
				"lib/utilities/Animatable.vala"
			],
			[
				"meni",
				"lib/menu/MenuItem.vala"
			],
			[
				"anim",
				"lib/utilities/Animatable.vala"
			],
			[
				"loa",
				"daemon/plugins/PluginLoader.vala"
			],
			[
				"mod",
				"daemon/plugins/PluginModule.vala"
			],
			[
				"lin",
				"plugins/LinearMenu/LinearMenuItem.vala"
			],
			[
				"ser",
				"daemon/server/OpenPieServer.vala"
			],
			[
				"me",
				"lib/menu/Menu.vala"
			],
			[
				"path",
				"lib/utilities/Paths.vala"
			],
			[
				"dis",
				"/var/www/HistoGlobe/script/display/Display3D.coffee"
			],
			[
				"",
				"/var/www/HistoGlobe/script/display/Display.coffee"
			],
			[
				"di",
				"/var/www/HistoGlobe/script/display/Display3D.coffee"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/.data/Projekte/Programmierung/Vala/OpenPie/openpie.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 165.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
